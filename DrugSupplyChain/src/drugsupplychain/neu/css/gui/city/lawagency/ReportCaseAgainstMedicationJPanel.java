/*
 * Class : ReportCaseAgainstMedicationJPanel.java
 * Developer : Laksh Lumba
 * Reviewer :
 * Description : 
 * Created On : Nov 16, 2014, 12:26:05 AM
 * ---------------------------------------------------------------------------
 * Change History
 * Develper :
 * Reviwer :
 * Changed ON :
 * ---------------------------------------------------------------------------
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drugsupplychain.neu.css.gui.city.lawagency;

import drugsupplychain.neu.css.log.ImplLogger;
import drugsupplychain.neu.css.model.organization.Organization;
import drugsupplychain.neu.css.model.organization.other.PatientOrganization;
import drugsupplychain.neu.css.model.product.ProductCatalog;
import drugsupplychain.neu.css.model.product.ProductItem;
import drugsupplychain.neu.css.model.request.DrugCaseRequest;
import drugsupplychain.neu.css.model.request.WorkRequest;
import drugsupplychain.neu.css.model.user.UserAccount;
import drugsupplychain.neu.css.util.ImplCommonUtil;
import drugsupplychain.neu.css.util.ImplConst;
import drugsupplychain.neu.css.util.ImplValidationUtils;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laksh
 */
public class ReportCaseAgainstMedicationJPanel extends javax.swing.JPanel {

    private final JPanel userProcessContainer;
    private final UserAccount userAccount;
    private final Organization organization;
    private final ProductCatalog productCatalog;
    /**
     * Creates new form ReportCaseAgainstMedicationJPanel
     * @param userProcessContainer
     * @param userAccount
     * @param organization
     * @param productCatalog
     */
    public ReportCaseAgainstMedicationJPanel(JPanel userProcessContainer, UserAccount userAccount,Organization organization,ProductCatalog productCatalog) {
        initComponents();
        ImplLogger.enterMethod();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization; 
        this.productCatalog = productCatalog;
        populateProductRequests();
        populateProductsName();
        populateDrugAbuseWay();
        ImplLogger.exitMethod();
    }
    /**
     * populate populateDrugAbuseWay 
     */
    private void populateDrugAbuseWay(){
        ImplLogger.enterMethod();
        drugAbuseComboBox.removeAllItems();
        drugAbuseComboBox.addItem(ImplConst.DRUG_ABUSE_EFFECT_PERSON_HEALTH);
        drugAbuseComboBox.addItem(ImplConst.DRUG_ABUSE_PERSON_DIED);
        drugAbuseComboBox.addItem(ImplConst.DRUG_ABUSE_SUSPECT_PACKING);
        drugAbuseComboBox.addItem(ImplConst.DRUG_ABUSE_INGREDIENTS);
        ImplLogger.exitMethod();
    } 
    
    
    private void populateProductRequests(){
        ImplLogger.enterMethod();
        DefaultTableModel defaultTableModel = (DefaultTableModel)caseTable.getModel();
        defaultTableModel.setRowCount(0);
        for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()){
                if (workRequest instanceof  DrugCaseRequest){
                    DrugCaseRequest drugCaseRequest = (DrugCaseRequest)workRequest;
                    Object[] row = new Object[9];
                    row[0] = drugCaseRequest;
                    row[1] = drugCaseRequest.getProduct();
                    row[2] = drugCaseRequest.getProduct().getProductName();
                    row[3] = drugCaseRequest.getRequestDate() == null ? ImplConst.EMPTY : ImplCommonUtil.getFormattedDate(workRequest.getRequestDate());
                    row[4] = drugCaseRequest.getResolveDate() == null ? ImplConst.EMPTY : ImplCommonUtil.getFormattedDate(workRequest.getResolveDate());
                    row[5] = drugCaseRequest.getStatus();
                    row[6] = drugCaseRequest.getDescription();
                    row[7] = drugCaseRequest.getPriority();
                    row[8] = drugCaseRequest.getMessage();
                    defaultTableModel.addRow(row);
                }            
            }
        ImplLogger.exitMethod();
    }
    /**
     * populate product name
     */
    private void populateProductsName(){
        ImplLogger.enterMethod();
        productIdComboBox.removeAllItems();
        for (ProductItem productItem :  productCatalog.getProductItems()){   
              productIdComboBox.addItem(productItem);   
        }
        ImplLogger.exitMethod();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        caseTable = new javax.swing.JTable();
        requestProductButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        productIdComboBox = new javax.swing.JComboBox();
        backButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        prioritySlider = new javax.swing.JSlider();
        priorityLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        drugAbuseComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        caseDescriptionTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        doctorReportTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Report Case Against Medication");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Suspect Product Name:");

        productNameTextField.setEditable(false);

        caseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Case ID", "Product Id", "Product Name", "Requested Date", "Resolve Date", "Status", "Description", "Priority", "Problem"
            }
        ));
        jScrollPane1.setViewportView(caseTable);

        requestProductButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        requestProductButton.setText("Report Case");
        requestProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestProductButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setText("Suspect Product Id:");

        productIdComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdComboBoxActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drugsupplychain/images/back.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("Case Priority");

        prioritySlider.setBackground(new java.awt.Color(51, 255, 51));
        prioritySlider.setForeground(new java.awt.Color(0, 0, 255));
        prioritySlider.setMajorTickSpacing(25);
        prioritySlider.setMaximum(75);
        prioritySlider.setPaintLabels(true);
        prioritySlider.setPaintTicks(true);
        prioritySlider.setPaintTrack(false);
        prioritySlider.setValue(0);
        prioritySlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        prioritySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                prioritySliderStateChanged(evt);
            }
        });

        priorityLabel.setText("LOW");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel6.setText("Drug Abuse:");

        drugAbuseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setText("Case Descripton:");

        caseDescriptionTextArea.setColumns(20);
        caseDescriptionTextArea.setRows(5);
        caseDescriptionTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                caseDescriptionTextAreaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(caseDescriptionTextArea);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Doctor Report ID:");

        doctorReportTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorReportTextFieldKeyTyped(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("(Note: You are the Patient and medicine requires prescription, add the lincense doctor prescription ID)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prioritySlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productNameTextField)
                            .addComponent(productIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(drugAbuseComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(doctorReportTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(49, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(requestProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(prioritySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(priorityLabel)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(drugAbuseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorReportTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(requestProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     * back button
     * @param evt 
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        ImplLogger.enterMethod();
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        ImplLogger.exitMethod();
    }//GEN-LAST:event_backButtonActionPerformed
    /**
     * request product
     * @param evt 
     */
    private void requestProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestProductButtonActionPerformed
        ImplLogger.enterMethod();
        if (validateFields()){
            ImplLogger.info("Validaion field passed");
            ProductItem productItem = (ProductItem)productIdComboBox.getSelectedItem();       
            DrugCaseRequest drugCaseRequest = new DrugCaseRequest();
            drugCaseRequest.setProduct(productItem.getProduct());
            drugCaseRequest.setDescription(caseDescriptionTextArea.getText());
            drugCaseRequest.setSender(userAccount);
            drugCaseRequest.setRequestDate(ImplCommonUtil.getTodaysDateBYDATE());
            drugCaseRequest.setMessage((String)drugAbuseComboBox.getSelectedItem());
            drugCaseRequest.setStatus(ImplConst.CASE_NEW);
            drugCaseRequest.setPriority(ImplCommonUtil.getPriorityValue(prioritySlider.getValue()));
            organization.getWorkQueue().getWorkRequestList().add(drugCaseRequest);
            clearAll();
            populateProductRequests();
        }
        ImplLogger.exitMethod();
    }//GEN-LAST:event_requestProductButtonActionPerformed
    
    /**
     * validate the fields before submitting
     */
    private boolean validateFields(){
        ImplLogger.enterMethod();
        StringBuffer validationMessage = new StringBuffer();
        boolean isValidationPassed = true;
        ProductItem productItem = (ProductItem)productIdComboBox.getSelectedItem();
        if(null != productItem.getProduct()){
            if(ImplValidationUtils.isStringEmptyOrNull(productNameTextField.getText())){
                validationMessage.append(ImplConst.VALIDATE_PRODUCT_NAME);
                validationMessage.append(ImplConst.NEXT_LINE);
                productNameTextField.setBackground(Color.red);
                isValidationPassed = false;
            }
            if (ImplValidationUtils.isStringEmptyOrNull(caseDescriptionTextArea.getText())){
                validationMessage.append(ImplConst.VALIDATE_CASE_DESCRIPTION);
                validationMessage.append(ImplConst.NEXT_LINE);
                caseDescriptionTextArea.setBackground(Color.red);
                isValidationPassed = false;
            }
            if (organization instanceof PatientOrganization && productItem.getProduct().isIsPrescriptionRequired()){
                if (ImplValidationUtils.isStringEmptyOrNull(doctorReportTextField.getText())){
                    validationMessage.append(ImplConst.VALIDATE_DOCTOR_REPORT);
                    validationMessage.append(ImplConst.NEXT_LINE);
                    doctorReportTextField.setBackground(Color.red);
                    isValidationPassed = false;
                }
            }
            if(!isValidationPassed){
                JOptionPane.showMessageDialog(null,validationMessage);
            }
            return isValidationPassed;
        } 
        ImplLogger.exitMethod();
        return false;
    }
    /**
     * clear all the text field
     */
    private void clearAll(){
        ImplLogger.enterMethod();
        productIdComboBox.setSelectedIndex(0);
        drugAbuseComboBox.setSelectedIndex(0);
        doctorReportTextField.setText(ImplConst.EMPTY);
        caseDescriptionTextArea.setText(ImplConst.EMPTY);
        ImplLogger.exitMethod();
    }  
    /**
     *  product combo box formed 
     * @param evt 
     */
    private void productIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdComboBoxActionPerformed
       ImplLogger.enterMethod();
       ProductItem productItem = (ProductItem)productIdComboBox.getSelectedItem();
       if (null != productItem){
           productNameTextField.setText(productItem.getProduct().getProductName());
       }
       ImplLogger.exitMethod();
    }//GEN-LAST:event_productIdComboBoxActionPerformed
    
    private void prioritySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_prioritySliderStateChanged
        priorityLabel.setText(ImplCommonUtil.getPriorityValue(prioritySlider.getValue()));
    }//GEN-LAST:event_prioritySliderStateChanged

    private void caseDescriptionTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caseDescriptionTextAreaKeyTyped
        caseDescriptionTextArea.setBackground(Color.white);
    }//GEN-LAST:event_caseDescriptionTextAreaKeyTyped

    private void doctorReportTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorReportTextFieldKeyTyped
        doctorReportTextField.setBackground(Color.white);
    }//GEN-LAST:event_doctorReportTextFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextArea caseDescriptionTextArea;
    private javax.swing.JTable caseTable;
    private javax.swing.JTextField doctorReportTextField;
    private javax.swing.JComboBox drugAbuseComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel priorityLabel;
    private javax.swing.JSlider prioritySlider;
    private javax.swing.JComboBox productIdComboBox;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JButton requestProductButton;
    // End of variables declaration//GEN-END:variables
}
